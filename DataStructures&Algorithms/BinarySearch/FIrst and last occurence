package main

import (
	"fmt"
)

func binary_search_last(low int, high int, slice []int, val int) (int, int) {

	res := -1

	for low <= high {

		mid := (low + high) / 2

		if val < slice[mid] {

			high = mid - 1

		} else if val > slice[mid] {
			low = mid + 1
		} else {
			low = mid + 1
			res = mid
		}

	}
	return val, res
}

func binary_search_first(low int, high int, slice []int, val int) (int, int) {

	res := -1

	for low <= high {

		mid := (low + high) / 2

		if val < slice[mid] {

			high = mid - 1

		} else if val > slice[mid] {
			low = mid + 1
		} else {
			high = mid - 1
			res = mid
		}

	}

	return val, res
}

func main() {

	var slice = []int{2, 4, 10, 10, 10, 10, 20}

	fmt.Println(binary_search_first(0, len(slice)-1, slice, 10))
	fmt.Println(binary_search_last(0, len(slice)-1, slice, 10))

}
